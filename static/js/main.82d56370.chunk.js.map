{"version":3,"sources":["components/Card/Card.jsx","components/Card-list/Card-list.jsx","components/search-box/search-box.component.jsx","App.js","index.js"],"names":["Card","props","className","src","monster","id","alt","username","name","Cardlist","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","respone","json","data","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAeeA,EAbF,SAACC,GACb,OACC,sBAA4BC,UAAU,iBAAtC,UACC,qBACCC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAKL,EAAMG,QAAQG,WAEpB,mCAAMN,EAAMG,QAAQI,QACpB,oCAAOP,EAAMG,QAAQG,cANZN,EAAMG,QAAQC,KCUXI,G,MAVE,SAACR,GACjB,OACC,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAI,SAACP,GAAD,OACnB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCMRO,G,MAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACjC,OACC,uBACCZ,UAAU,YACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCEG,G,wDAtCd,aAAe,IAAD,8BACb,gBAaDH,aAAe,SAACI,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACZb,SAAU,GACVU,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnBI,MAAM,8CACJC,MAAK,SAACC,GAAD,OAAaA,EAAQC,UAC1BF,MAAK,SAACG,GAAD,OAAU,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO5C,WAAU,IAAD,EAC0BC,KAAKN,MAA/Bb,EADA,EACAA,SAAUU,EADV,EACUA,YACZU,EAAmBpB,EAASqB,QAAO,SAAC3B,GAAD,OACxCA,EAAQI,KAAKwB,cAAcC,SAASb,EAAYY,kBAGjD,OACC,sBAAK9B,UAAU,MAAf,UACC,oBAAIG,GAAG,UAAP,6BACA,qBAAKA,GAAG,gBACR,cAAC,EAAD,CACCQ,YAAY,iBACZC,aAAce,KAAKf,eAEpB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAjCNI,cCDlBC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.82d56370.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.style.css';\r\nconst Card = (props) => {\r\n\treturn (\r\n\t\t<div key={props.monster.id} className=\"card-container\">\r\n\t\t\t<img\r\n\t\t\t\tsrc={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n\t\t\t\talt={props.monster.username}\r\n\t\t\t/>\r\n\t\t\t<h1> {props.monster.name}</h1>\r\n\t\t\t<h2>@ {props.monster.username}</h2>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from '../Card/Card';\r\nimport './card-list.style.css';\r\n\r\nconst Cardlist = (props) => {\r\n\treturn (\r\n\t\t<div className=\"card-list\">\r\n\t\t\t{props.monsters.map((monster) => (\r\n\t\t\t\t<Card key={monster.id} monster={monster} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Cardlist;\r\n","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => {\r\n\treturn (\r\n\t\t<input\r\n\t\t\tclassName=\"searchBox\"\r\n\t\t\ttype=\"search\"\r\n\t\t\tplaceholder={placeholder}\r\n\t\t\tonChange={handleChange}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from 'react';\nimport Cardlist from './components/Card-list/Card-list';\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: '',\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then((respone) => respone.json())\n\t\t\t.then((data) => this.setState({ monsters: data }));\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({ searchField: e.target.value });\n\t};\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonsters = monsters.filter((monster) =>\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1 id=\"Heading\">Monster-Rolodex</h1>\n\t\t\t\t<div id=\"progressbar\"></div>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder=\"Search Monster\"\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<Cardlist monsters={filteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}